{"mappings":"C,A,W,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,M,E,C,A,C,a,O,Y,A,a,O,M,K,E,S,C,ECMA,aAEA,GAAI,CAAEC,CAAAA,WAAWmB,MAAM,EAAInB,WAAWmB,MAAM,CAACC,OAAO,EAAIpB,WAAWmB,MAAM,CAACC,OAAO,CAACb,EAAE,AAAFA,EAChF,MAAM,AAAIM,MAAM,4DAGZb,CAAAA,WAAWqB,OAAO,EAAIrB,WAAWqB,OAAO,CAACD,OAAO,EAAIpB,WAAWqB,OAAO,CAACD,OAAO,CAACb,EAAAA,CAirCnFG,EAAOF,OAAO,CAAGR,WAAWqB,OAAO,CAFnCX,EAAOF,OAAO,CAAGc,AAvqCAC,CAAAA,AAAAA,IAIf,IAAMC,EAAc,CAClB,OAAU,CACR,MAAS,CACP,QAAW,EACX,QAAW,CACb,EACA,SAAY,CACV,QAAW,EACX,QAAW,CACb,EACA,IAAO,CACL,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,CACF,EACA,UAAa,CACX,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,IAAO,CACL,QAAW,EACX,QAAW,CACb,EACA,YAAe,CACb,QAAW,EACX,QAAW,CACb,EACA,UAAa,CACX,QAAW,EACX,QAAW,CACb,EACA,WAAc,CACZ,QAAW,EACX,QAAW,CACb,EACA,QAAW,CACT,QAAW,EACX,QAAW,CACb,EACA,KAAQ,CACN,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,WAAc,CACZ,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,CACF,EACA,cAAiB,CACf,QAAW,CACT,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,EACA,OAAU,CACR,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,EACA,wBAA2B,CACzB,QAAW,EACX,QAAW,CACb,EACA,aAAgB,CACd,QAAW,EACX,QAAW,CACb,EACA,SAAY,CACV,QAAW,EACX,QAAW,CACb,EACA,SAAY,CACV,QAAW,EACX,QAAW,CACb,EACA,UAAa,CACX,QAAW,EACX,QAAW,CACb,EACA,wBAA2B,CACzB,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,EACA,aAAgB,CACd,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,EACA,QAAW,CACT,QAAW,EACX,QAAW,CACb,EACA,SAAY,CACV,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,EACA,SAAY,CACV,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,CACF,EACA,aAAgB,CACd,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,YAAe,CACb,QAAW,EACX,QAAW,CACb,EACA,cAAiB,CACf,QAAW,EACX,QAAW,CACb,EACA,gBAAmB,CACjB,QAAW,EACX,QAAW,CACb,EACA,eAAkB,CAChB,QAAW,EACX,QAAW,CACb,EACA,cAAiB,CACf,QAAW,EACX,QAAW,CACb,EACA,mBAAsB,CACpB,QAAW,EACX,QAAW,CACb,EACA,gBAAmB,CACjB,QAAW,EACX,QAAW,CACb,EACA,iBAAoB,CAClB,QAAW,EACX,QAAW,CACb,EACA,SAAY,CACV,QAAW,EACX,QAAW,CACb,CACF,EACA,SAAY,CACV,OAAU,CACR,QAAW,EACX,QAAW,CACb,CACF,EACA,aAAgB,CACd,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,UAAa,CACX,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,CACF,EACA,QAAW,CACT,IAAO,CACL,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,mBAAsB,CACpB,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,IAAO,CACL,QAAW,EACX,QAAW,CACb,CACF,EACA,SAAY,CACV,gBAAmB,CACjB,KAAQ,CACN,QAAW,EACX,QAAW,EACX,kBAAqB,CAAA,CACvB,CACF,EACA,OAAU,CACR,OAAU,CACR,QAAW,EACX,QAAW,EACX,kBAAqB,CAAA,CACvB,EACA,SAAY,CACV,kBAAqB,CACnB,QAAW,EACX,QAAW,CACb,CACF,CACF,CACF,EACA,UAAa,CACX,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,SAAY,CACV,QAAW,EACX,QAAW,CACb,EACA,MAAS,CACP,QAAW,EACX,QAAW,CACb,EACA,YAAe,CACb,QAAW,EACX,QAAW,CACb,EACA,KAAQ,CACN,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,EACA,MAAS,CACP,QAAW,EACX,QAAW,CACb,EACA,WAAc,CACZ,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,KAAQ,CACN,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,CACF,EACA,UAAa,CACX,0BAA6B,CAC3B,QAAW,EACX,QAAW,CACb,EACA,yBAA4B,CAC1B,QAAW,EACX,QAAW,CACb,CACF,EACA,QAAW,CACT,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,UAAa,CACX,QAAW,EACX,QAAW,CACb,EACA,YAAe,CACb,QAAW,EACX,QAAW,CACb,EACA,UAAa,CACX,QAAW,EACX,QAAW,CACb,EACA,UAAa,CACX,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,CACF,EACA,KAAQ,CACN,eAAkB,CAChB,QAAW,EACX,QAAW,CACb,EACA,mBAAsB,CACpB,QAAW,EACX,QAAW,CACb,CACF,EACA,SAAY,CACV,kBAAqB,CACnB,QAAW,EACX,QAAW,CACb,CACF,EACA,KAAQ,CACN,WAAc,CACZ,QAAW,EACX,QAAW,CACb,CACF,EACA,WAAc,CACZ,IAAO,CACL,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,QAAW,CACT,QAAW,EACX,QAAW,CACb,EACA,WAAc,CACZ,QAAW,EACX,QAAW,CACb,EACA,cAAiB,CACf,QAAW,EACX,QAAW,CACb,CACF,EACA,cAAiB,CACf,MAAS,CACP,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,mBAAsB,CACpB,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,CACF,EACA,WAAc,CACZ,SAAY,CACV,QAAW,EACX,QAAW,CACb,EACA,SAAY,CACV,QAAW,EACX,QAAW,CACb,EACA,KAAQ,CACN,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,EACA,QAAW,CACT,QAAW,EACX,QAAW,CACb,EACA,SAAY,CACV,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,EACA,SAAY,CACV,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,EACA,KAAQ,CACN,QAAW,EACX,QAAW,EACX,qBAAwB,CAAA,CAC1B,CACF,EACA,YAAe,CACb,SAAY,CACV,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,QAAW,CACT,QAAW,EACX,QAAW,CACb,CACF,EACA,QAAW,CACT,kBAAqB,CACnB,QAAW,EACX,QAAW,CACb,EACA,gBAAmB,CACjB,QAAW,EACX,QAAW,CACb,EACA,gBAAmB,CACjB,QAAW,EACX,QAAW,CACb,EACA,mBAAsB,CACpB,QAAW,EACX,QAAW,CACb,EACA,YAAe,CACb,QAAW,EACX,QAAW,CACb,EACA,kBAAqB,CACnB,QAAW,EACX,QAAW,CACb,EACA,gBAAmB,CACjB,QAAW,EACX,QAAW,CACb,CACF,EACA,SAAY,CACV,WAAc,CACZ,QAAW,EACX,QAAW,CACb,EACA,kBAAqB,CACnB,QAAW,EACX,QAAW,CACb,EACA,QAAW,CACT,QAAW,EACX,QAAW,CACb,CACF,EACA,QAAW,CACT,MAAS,CACP,MAAS,CACP,QAAW,EACX,QAAW,CACb,EACA,IAAO,CACL,QAAW,EACX,QAAW,CACb,EACA,cAAiB,CACf,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,IAAO,CACL,QAAW,EACX,QAAW,CACb,CACF,EACA,QAAW,CACT,IAAO,CACL,QAAW,EACX,QAAW,CACb,EACA,cAAiB,CACf,QAAW,EACX,QAAW,CACb,CACF,EACA,KAAQ,CACN,MAAS,CACP,QAAW,EACX,QAAW,CACb,EACA,IAAO,CACL,QAAW,EACX,QAAW,CACb,EACA,cAAiB,CACf,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,IAAO,CACL,QAAW,EACX,QAAW,CACb,CACF,CACF,EACA,KAAQ,CACN,kBAAqB,CACnB,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,eAAkB,CAChB,QAAW,EACX,QAAW,CACb,EACA,QAAW,CACT,QAAW,EACX,QAAW,CACb,EACA,UAAa,CACX,QAAW,EACX,QAAW,CACb,EACA,cAAiB,CACf,QAAW,EACX,QAAW,CACb,EACA,IAAO,CACL,QAAW,EACX,QAAW,CACb,EACA,WAAc,CACZ,QAAW,EACX,QAAW,CACb,EACA,QAAW,CACT,QAAW,EACX,QAAW,CACb,EACA,gBAAmB,CACjB,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA,UAAa,CACX,QAAW,EACX,QAAW,CACb,EACA,UAAa,CACX,QAAW,EACX,QAAW,CACb,EACA,UAAa,CACX,QAAW,EACX,QAAW,CACb,EACA,KAAQ,CACN,QAAW,EACX,QAAW,CACb,EACA,MAAS,CACP,QAAW,EACX,QAAW,CACb,EACA,OAAU,CACR,QAAW,EACX,QAAW,CACb,EACA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","sources":["<anon>","node_modules/webextension-polyfill/dist/browser-polyfill.js","src/ui.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiref725\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiref725\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"hnTw7\", function(module, exports) {\n(function(global, factory) {\n    if (typeof define === \"function\" && define.amd) define(\"webextension-polyfill\", [\n        \"module\"\n    ], factory);\n    else {\n        var mod;\n        factory(module);\n    }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function(module1) {\n    /* webextension-polyfill - v0.12.0 - Tue May 14 2024 18:01:29 */ /* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */ /* vim: set sts=2 sw=2 et tw=80: */ /* This Source Code Form is subject to the terms of the Mozilla Public\n   * License, v. 2.0. If a copy of the MPL was not distributed with this\n   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */ \"use strict\";\n    if (!(globalThis.chrome && globalThis.chrome.runtime && globalThis.chrome.runtime.id)) throw new Error(\"This script should only be loaded in a browser extension.\");\n    if (!(globalThis.browser && globalThis.browser.runtime && globalThis.browser.runtime.id)) {\n        const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\";\n        // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n        // optimization for Firefox. Since Spidermonkey does not fully parse the\n        // contents of a function until the first time it's called, and since it will\n        // never actually need to be called, this allows the polyfill to be included\n        // in Firefox nearly for free.\n        const wrapAPIs = (extensionAPIs)=>{\n            // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n            // at build time by replacing the following \"include\" with the content of the\n            // JSON file.\n            const apiMetadata = {\n                \"alarms\": {\n                    \"clear\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"clearAll\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"get\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"getAll\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    }\n                },\n                \"bookmarks\": {\n                    \"create\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"get\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getChildren\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getRecent\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getSubTree\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getTree\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"move\": {\n                        \"minArgs\": 2,\n                        \"maxArgs\": 2\n                    },\n                    \"remove\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removeTree\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"search\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"update\": {\n                        \"minArgs\": 2,\n                        \"maxArgs\": 2\n                    }\n                },\n                \"browserAction\": {\n                    \"disable\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    },\n                    \"enable\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    },\n                    \"getBadgeBackgroundColor\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getBadgeText\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getPopup\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getTitle\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"openPopup\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"setBadgeBackgroundColor\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    },\n                    \"setBadgeText\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    },\n                    \"setIcon\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"setPopup\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    },\n                    \"setTitle\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    }\n                },\n                \"browsingData\": {\n                    \"remove\": {\n                        \"minArgs\": 2,\n                        \"maxArgs\": 2\n                    },\n                    \"removeCache\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removeCookies\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removeDownloads\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removeFormData\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removeHistory\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removeLocalStorage\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removePasswords\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removePluginData\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"settings\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    }\n                },\n                \"commands\": {\n                    \"getAll\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    }\n                },\n                \"contextMenus\": {\n                    \"remove\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removeAll\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"update\": {\n                        \"minArgs\": 2,\n                        \"maxArgs\": 2\n                    }\n                },\n                \"cookies\": {\n                    \"get\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getAll\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getAllCookieStores\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"remove\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"set\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    }\n                },\n                \"devtools\": {\n                    \"inspectedWindow\": {\n                        \"eval\": {\n                            \"minArgs\": 1,\n                            \"maxArgs\": 2,\n                            \"singleCallbackArg\": false\n                        }\n                    },\n                    \"panels\": {\n                        \"create\": {\n                            \"minArgs\": 3,\n                            \"maxArgs\": 3,\n                            \"singleCallbackArg\": true\n                        },\n                        \"elements\": {\n                            \"createSidebarPane\": {\n                                \"minArgs\": 1,\n                                \"maxArgs\": 1\n                            }\n                        }\n                    }\n                },\n                \"downloads\": {\n                    \"cancel\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"download\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"erase\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getFileIcon\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 2\n                    },\n                    \"open\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    },\n                    \"pause\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removeFile\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"resume\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"search\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"show\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    }\n                },\n                \"extension\": {\n                    \"isAllowedFileSchemeAccess\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"isAllowedIncognitoAccess\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    }\n                },\n                \"history\": {\n                    \"addUrl\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"deleteAll\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"deleteRange\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"deleteUrl\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getVisits\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"search\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    }\n                },\n                \"i18n\": {\n                    \"detectLanguage\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getAcceptLanguages\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    }\n                },\n                \"identity\": {\n                    \"launchWebAuthFlow\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    }\n                },\n                \"idle\": {\n                    \"queryState\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    }\n                },\n                \"management\": {\n                    \"get\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getAll\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"getSelf\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"setEnabled\": {\n                        \"minArgs\": 2,\n                        \"maxArgs\": 2\n                    },\n                    \"uninstallSelf\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    }\n                },\n                \"notifications\": {\n                    \"clear\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"create\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 2\n                    },\n                    \"getAll\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"getPermissionLevel\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"update\": {\n                        \"minArgs\": 2,\n                        \"maxArgs\": 2\n                    }\n                },\n                \"pageAction\": {\n                    \"getPopup\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getTitle\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"hide\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    },\n                    \"setIcon\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"setPopup\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    },\n                    \"setTitle\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    },\n                    \"show\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1,\n                        \"fallbackToNoCallback\": true\n                    }\n                },\n                \"permissions\": {\n                    \"contains\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getAll\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"remove\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"request\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    }\n                },\n                \"runtime\": {\n                    \"getBackgroundPage\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"getPlatformInfo\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"openOptionsPage\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"requestUpdateCheck\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"sendMessage\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 3\n                    },\n                    \"sendNativeMessage\": {\n                        \"minArgs\": 2,\n                        \"maxArgs\": 2\n                    },\n                    \"setUninstallURL\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    }\n                },\n                \"sessions\": {\n                    \"getDevices\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"getRecentlyClosed\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"restore\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    }\n                },\n                \"storage\": {\n                    \"local\": {\n                        \"clear\": {\n                            \"minArgs\": 0,\n                            \"maxArgs\": 0\n                        },\n                        \"get\": {\n                            \"minArgs\": 0,\n                            \"maxArgs\": 1\n                        },\n                        \"getBytesInUse\": {\n                            \"minArgs\": 0,\n                            \"maxArgs\": 1\n                        },\n                        \"remove\": {\n                            \"minArgs\": 1,\n                            \"maxArgs\": 1\n                        },\n                        \"set\": {\n                            \"minArgs\": 1,\n                            \"maxArgs\": 1\n                        }\n                    },\n                    \"managed\": {\n                        \"get\": {\n                            \"minArgs\": 0,\n                            \"maxArgs\": 1\n                        },\n                        \"getBytesInUse\": {\n                            \"minArgs\": 0,\n                            \"maxArgs\": 1\n                        }\n                    },\n                    \"sync\": {\n                        \"clear\": {\n                            \"minArgs\": 0,\n                            \"maxArgs\": 0\n                        },\n                        \"get\": {\n                            \"minArgs\": 0,\n                            \"maxArgs\": 1\n                        },\n                        \"getBytesInUse\": {\n                            \"minArgs\": 0,\n                            \"maxArgs\": 1\n                        },\n                        \"remove\": {\n                            \"minArgs\": 1,\n                            \"maxArgs\": 1\n                        },\n                        \"set\": {\n                            \"minArgs\": 1,\n                            \"maxArgs\": 1\n                        }\n                    }\n                },\n                \"tabs\": {\n                    \"captureVisibleTab\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 2\n                    },\n                    \"create\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"detectLanguage\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"discard\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"duplicate\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"executeScript\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 2\n                    },\n                    \"get\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getCurrent\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    },\n                    \"getZoom\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"getZoomSettings\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"goBack\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"goForward\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"highlight\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"insertCSS\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 2\n                    },\n                    \"move\": {\n                        \"minArgs\": 2,\n                        \"maxArgs\": 2\n                    },\n                    \"query\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"reload\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 2\n                    },\n                    \"remove\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"removeCSS\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 2\n                    },\n                    \"sendMessage\": {\n                        \"minArgs\": 2,\n                        \"maxArgs\": 3\n                    },\n                    \"setZoom\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 2\n                    },\n                    \"setZoomSettings\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 2\n                    },\n                    \"update\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 2\n                    }\n                },\n                \"topSites\": {\n                    \"get\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    }\n                },\n                \"webNavigation\": {\n                    \"getAllFrames\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"getFrame\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    }\n                },\n                \"webRequest\": {\n                    \"handlerBehaviorChanged\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 0\n                    }\n                },\n                \"windows\": {\n                    \"create\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"get\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 2\n                    },\n                    \"getAll\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"getCurrent\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"getLastFocused\": {\n                        \"minArgs\": 0,\n                        \"maxArgs\": 1\n                    },\n                    \"remove\": {\n                        \"minArgs\": 1,\n                        \"maxArgs\": 1\n                    },\n                    \"update\": {\n                        \"minArgs\": 2,\n                        \"maxArgs\": 2\n                    }\n                }\n            };\n            if (Object.keys(apiMetadata).length === 0) throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n            /**\n       * A WeakMap subclass which creates and stores a value for any key which does\n       * not exist when accessed, but behaves exactly as an ordinary WeakMap\n       * otherwise.\n       *\n       * @param {function} createItem\n       *        A function which will be called in order to create the value for any\n       *        key which does not exist, the first time it is accessed. The\n       *        function receives, as its only argument, the key being created.\n       */ class DefaultWeakMap extends WeakMap {\n                constructor(createItem, items){\n                    super(items);\n                    this.createItem = createItem;\n                }\n                get(key) {\n                    if (!this.has(key)) this.set(key, this.createItem(key));\n                    return super.get(key);\n                }\n            }\n            /**\n       * Returns true if the given object is an object with a `then` method, and can\n       * therefore be assumed to behave as a Promise.\n       *\n       * @param {*} value The value to test.\n       * @returns {boolean} True if the value is thenable.\n       */ const isThenable = (value)=>{\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            };\n            /**\n       * Creates and returns a function which, when called, will resolve or reject\n       * the given promise based on how it is called:\n       *\n       * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n       *   the promise is rejected with that value.\n       * - If the function is called with exactly one argument, the promise is\n       *   resolved to that value.\n       * - Otherwise, the promise is resolved to an array containing all of the\n       *   function's arguments.\n       *\n       * @param {object} promise\n       *        An object containing the resolution and rejection functions of a\n       *        promise.\n       * @param {function} promise.resolve\n       *        The promise's resolution function.\n       * @param {function} promise.reject\n       *        The promise's rejection function.\n       * @param {object} metadata\n       *        Metadata about the wrapped method which has created the callback.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function}\n       *        The generated callback function.\n       */ const makeCallback = (promise, metadata)=>{\n                return (...callbackArgs)=>{\n                    if (extensionAPIs.runtime.lastError) promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n                    else if (metadata.singleCallbackArg || callbackArgs.length <= 1 && metadata.singleCallbackArg !== false) promise.resolve(callbackArgs[0]);\n                    else promise.resolve(callbackArgs);\n                };\n            };\n            const pluralizeArguments = (numArgs)=>numArgs == 1 ? \"argument\" : \"arguments\";\n            /**\n       * Creates a wrapper function for a method with the given name and metadata.\n       *\n       * @param {string} name\n       *        The name of the method which is being wrapped.\n       * @param {object} metadata\n       *        Metadata about the method being wrapped.\n       * @param {integer} metadata.minArgs\n       *        The minimum number of arguments which must be passed to the\n       *        function. If called with fewer than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {integer} metadata.maxArgs\n       *        The maximum number of arguments which may be passed to the\n       *        function. If called with more than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function(object, ...*)}\n       *       The generated wrapper function.\n       */ const wrapAsyncFunction = (name, metadata)=>{\n                return function asyncFunctionWrapper(target, ...args) {\n                    if (args.length < metadata.minArgs) throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n                    if (args.length > metadata.maxArgs) throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n                    return new Promise((resolve, reject)=>{\n                        if (metadata.fallbackToNoCallback) // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n                        // and so the polyfill will try to call it with a callback first, and it will fallback\n                        // to not passing the callback if the first call fails.\n                        try {\n                            target[name](...args, makeCallback({\n                                resolve: resolve,\n                                reject: reject\n                            }, metadata));\n                        } catch (cbError) {\n                            console.warn(`${name} API method doesn't seem to support the callback parameter, ` + \"falling back to call it without a callback: \", cbError);\n                            target[name](...args);\n                            // Update the API method metadata, so that the next API calls will not try to\n                            // use the unsupported callback anymore.\n                            metadata.fallbackToNoCallback = false;\n                            metadata.noCallback = true;\n                            resolve();\n                        }\n                        else if (metadata.noCallback) {\n                            target[name](...args);\n                            resolve();\n                        } else target[name](...args, makeCallback({\n                            resolve: resolve,\n                            reject: reject\n                        }, metadata));\n                    });\n                };\n            };\n            /**\n       * Wraps an existing method of the target object, so that calls to it are\n       * intercepted by the given wrapper function. The wrapper function receives,\n       * as its first argument, the original `target` object, followed by each of\n       * the arguments passed to the original method.\n       *\n       * @param {object} target\n       *        The original target object that the wrapped method belongs to.\n       * @param {function} method\n       *        The method being wrapped. This is used as the target of the Proxy\n       *        object which is created to wrap the method.\n       * @param {function} wrapper\n       *        The wrapper function which is called in place of a direct invocation\n       *        of the wrapped method.\n       *\n       * @returns {Proxy<function>}\n       *        A Proxy object for the given method, which invokes the given wrapper\n       *        method in its place.\n       */ const wrapMethod = (target, method, wrapper)=>{\n                return new Proxy(method, {\n                    apply (targetMethod, thisObj, args) {\n                        return wrapper.call(thisObj, target, ...args);\n                    }\n                });\n            };\n            let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n            /**\n       * Wraps an object in a Proxy which intercepts and wraps certain methods\n       * based on the given `wrappers` and `metadata` objects.\n       *\n       * @param {object} target\n       *        The target object to wrap.\n       *\n       * @param {object} [wrappers = {}]\n       *        An object tree containing wrapper functions for special cases. Any\n       *        function present in this object tree is called in place of the\n       *        method in the same location in the `target` object tree. These\n       *        wrapper methods are invoked as described in {@see wrapMethod}.\n       *\n       * @param {object} [metadata = {}]\n       *        An object tree containing metadata used to automatically generate\n       *        Promise-based wrapper functions for asynchronous. Any function in\n       *        the `target` object tree which has a corresponding metadata object\n       *        in the same location in the `metadata` tree is replaced with an\n       *        automatically-generated wrapper function, as described in\n       *        {@see wrapAsyncFunction}\n       *\n       * @returns {Proxy<object>}\n       */ const wrapObject = (target, wrappers = {}, metadata = {})=>{\n                let cache = Object.create(null);\n                let handlers = {\n                    has (proxyTarget, prop) {\n                        return prop in target || prop in cache;\n                    },\n                    get (proxyTarget, prop, receiver) {\n                        if (prop in cache) return cache[prop];\n                        if (!(prop in target)) return undefined;\n                        let value = target[prop];\n                        if (typeof value === \"function\") {\n                            // This is a method on the underlying object. Check if we need to do\n                            // any wrapping.\n                            if (typeof wrappers[prop] === \"function\") // We have a special-case wrapper for this method.\n                            value = wrapMethod(target, target[prop], wrappers[prop]);\n                            else if (hasOwnProperty(metadata, prop)) {\n                                // This is an async method that we have metadata for. Create a\n                                // Promise wrapper for it.\n                                let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n                                value = wrapMethod(target, target[prop], wrapper);\n                            } else // This is a method that we don't know or care about. Return the\n                            // original method, bound to the underlying object.\n                            value = value.bind(target);\n                        } else if (typeof value === \"object\" && value !== null && (hasOwnProperty(wrappers, prop) || hasOwnProperty(metadata, prop))) // This is an object that we need to do some wrapping for the children\n                        // of. Create a sub-object wrapper for it with the appropriate child\n                        // metadata.\n                        value = wrapObject(value, wrappers[prop], metadata[prop]);\n                        else if (hasOwnProperty(metadata, \"*\")) // Wrap all properties in * namespace.\n                        value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n                        else {\n                            // We don't need to do any wrapping for this property,\n                            // so just forward all access to the underlying object.\n                            Object.defineProperty(cache, prop, {\n                                configurable: true,\n                                enumerable: true,\n                                get () {\n                                    return target[prop];\n                                },\n                                set (value) {\n                                    target[prop] = value;\n                                }\n                            });\n                            return value;\n                        }\n                        cache[prop] = value;\n                        return value;\n                    },\n                    set (proxyTarget, prop, value, receiver) {\n                        if (prop in cache) cache[prop] = value;\n                        else target[prop] = value;\n                        return true;\n                    },\n                    defineProperty (proxyTarget, prop, desc) {\n                        return Reflect.defineProperty(cache, prop, desc);\n                    },\n                    deleteProperty (proxyTarget, prop) {\n                        return Reflect.deleteProperty(cache, prop);\n                    }\n                };\n                // Per contract of the Proxy API, the \"get\" proxy handler must return the\n                // original value of the target if that value is declared read-only and\n                // non-configurable. For this reason, we create an object with the\n                // prototype set to `target` instead of using `target` directly.\n                // Otherwise we cannot return a custom object for APIs that\n                // are declared read-only and non-configurable, such as `chrome.devtools`.\n                //\n                // The proxy handlers themselves will still use the original `target`\n                // instead of the `proxyTarget`, so that the methods and properties are\n                // dereferenced via the original targets.\n                let proxyTarget = Object.create(target);\n                return new Proxy(proxyTarget, handlers);\n            };\n            /**\n       * Creates a set of wrapper functions for an event object, which handles\n       * wrapping of listener functions that those messages are passed.\n       *\n       * A single wrapper is created for each listener function, and stored in a\n       * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n       * retrieve the original wrapper, so that  attempts to remove a\n       * previously-added listener work as expected.\n       *\n       * @param {DefaultWeakMap<function, function>} wrapperMap\n       *        A DefaultWeakMap object which will create the appropriate wrapper\n       *        for a given listener function when one does not exist, and retrieve\n       *        an existing one when it does.\n       *\n       * @returns {object}\n       */ const wrapEvent = (wrapperMap)=>({\n                    addListener (target, listener, ...args) {\n                        target.addListener(wrapperMap.get(listener), ...args);\n                    },\n                    hasListener (target, listener) {\n                        return target.hasListener(wrapperMap.get(listener));\n                    },\n                    removeListener (target, listener) {\n                        target.removeListener(wrapperMap.get(listener));\n                    }\n                });\n            const onRequestFinishedWrappers = new DefaultWeakMap((listener)=>{\n                if (typeof listener !== \"function\") return listener;\n                /**\n         * Wraps an onRequestFinished listener function so that it will return a\n         * `getContent()` property which returns a `Promise` rather than using a\n         * callback API.\n         *\n         * @param {object} req\n         *        The HAR entry object representing the network request.\n         */ return function onRequestFinished(req) {\n                    const wrappedReq = wrapObject(req, {} /* wrappers */ , {\n                        getContent: {\n                            minArgs: 0,\n                            maxArgs: 0\n                        }\n                    });\n                    listener(wrappedReq);\n                };\n            });\n            const onMessageWrappers = new DefaultWeakMap((listener)=>{\n                if (typeof listener !== \"function\") return listener;\n                /**\n         * Wraps a message listener function so that it may send responses based on\n         * its return value, rather than by returning a sentinel value and calling a\n         * callback. If the listener function returns a Promise, the response is\n         * sent when the promise either resolves or rejects.\n         *\n         * @param {*} message\n         *        The message sent by the other end of the channel.\n         * @param {object} sender\n         *        Details about the sender of the message.\n         * @param {function(*)} sendResponse\n         *        A callback which, when called with an arbitrary argument, sends\n         *        that value as a response.\n         * @returns {boolean}\n         *        True if the wrapped listener returned a Promise, which will later\n         *        yield a response. False otherwise.\n         */ return function onMessage(message, sender, sendResponse) {\n                    let didCallSendResponse = false;\n                    let wrappedSendResponse;\n                    let sendResponsePromise = new Promise((resolve)=>{\n                        wrappedSendResponse = function(response) {\n                            didCallSendResponse = true;\n                            resolve(response);\n                        };\n                    });\n                    let result;\n                    try {\n                        result = listener(message, sender, wrappedSendResponse);\n                    } catch (err) {\n                        result = Promise.reject(err);\n                    }\n                    const isResultThenable = result !== true && isThenable(result);\n                    // If the listener didn't returned true or a Promise, or called\n                    // wrappedSendResponse synchronously, we can exit earlier\n                    // because there will be no response sent from this listener.\n                    if (result !== true && !isResultThenable && !didCallSendResponse) return false;\n                    // A small helper to send the message if the promise resolves\n                    // and an error if the promise rejects (a wrapped sendMessage has\n                    // to translate the message into a resolved promise or a rejected\n                    // promise).\n                    const sendPromisedResult = (promise)=>{\n                        promise.then((msg)=>{\n                            // send the message value.\n                            sendResponse(msg);\n                        }, (error)=>{\n                            // Send a JSON representation of the error if the rejected value\n                            // is an instance of error, or the object itself otherwise.\n                            let message;\n                            if (error && (error instanceof Error || typeof error.message === \"string\")) message = error.message;\n                            else message = \"An unexpected error occurred\";\n                            sendResponse({\n                                __mozWebExtensionPolyfillReject__: true,\n                                message: message\n                            });\n                        }).catch((err)=>{\n                            // Print an error on the console if unable to send the response.\n                            console.error(\"Failed to send onMessage rejected reply\", err);\n                        });\n                    };\n                    // If the listener returned a Promise, send the resolved value as a\n                    // result, otherwise wait the promise related to the wrappedSendResponse\n                    // callback to resolve and send it as a response.\n                    if (isResultThenable) sendPromisedResult(result);\n                    else sendPromisedResult(sendResponsePromise);\n                    // Let Chrome know that the listener is replying.\n                    return true;\n                };\n            });\n            const wrappedSendMessageCallback = ({ reject, resolve }, reply)=>{\n                if (extensionAPIs.runtime.lastError) {\n                    // Detect when none of the listeners replied to the sendMessage call and resolve\n                    // the promise to undefined as in Firefox.\n                    // See https://github.com/mozilla/webextension-polyfill/issues/130\n                    if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) resolve();\n                    else reject(new Error(extensionAPIs.runtime.lastError.message));\n                } else if (reply && reply.__mozWebExtensionPolyfillReject__) // Convert back the JSON representation of the error into\n                // an Error instance.\n                reject(new Error(reply.message));\n                else resolve(reply);\n            };\n            const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args)=>{\n                if (args.length < metadata.minArgs) throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n                if (args.length > metadata.maxArgs) throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n                return new Promise((resolve, reject)=>{\n                    const wrappedCb = wrappedSendMessageCallback.bind(null, {\n                        resolve: resolve,\n                        reject: reject\n                    });\n                    args.push(wrappedCb);\n                    apiNamespaceObj.sendMessage(...args);\n                });\n            };\n            const staticWrappers = {\n                devtools: {\n                    network: {\n                        onRequestFinished: wrapEvent(onRequestFinishedWrappers)\n                    }\n                },\n                runtime: {\n                    onMessage: wrapEvent(onMessageWrappers),\n                    onMessageExternal: wrapEvent(onMessageWrappers),\n                    sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n                        minArgs: 1,\n                        maxArgs: 3\n                    })\n                },\n                tabs: {\n                    sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n                        minArgs: 2,\n                        maxArgs: 3\n                    })\n                }\n            };\n            const settingMetadata = {\n                clear: {\n                    minArgs: 1,\n                    maxArgs: 1\n                },\n                get: {\n                    minArgs: 1,\n                    maxArgs: 1\n                },\n                set: {\n                    minArgs: 1,\n                    maxArgs: 1\n                }\n            };\n            apiMetadata.privacy = {\n                network: {\n                    \"*\": settingMetadata\n                },\n                services: {\n                    \"*\": settingMetadata\n                },\n                websites: {\n                    \"*\": settingMetadata\n                }\n            };\n            return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n        };\n        // The build process adds a UMD wrapper around this file, which makes the\n        // `module` variable available.\n        module1.exports = wrapAPIs(chrome);\n    } else module1.exports = globalThis.browser;\n});\n\n});\n\n\nvar $hnTw7 = parcelRequire(\"hnTw7\");\nfunction $264b11b18bc87cf6$export$76c0134e616adfe() {\n    function defineAction(action) {\n        async function actionHandler(params) {\n            const response = await (0, (/*@__PURE__*/$parcel$interopDefault($hnTw7))).runtime.sendMessage({\n                action: `ezrevenue_${action}`,\n                data: params || {}\n            });\n            console.log('ezrevenue response:', response);\n            return response;\n        // if (response && response.success) {\n        //   return response.data\n        // } else {\n        //   throw new Error(response?.error || 'unexpected error response')\n        // }\n        }\n        return {\n            [action]: actionHandler\n        };\n    }\n    const self = {\n        ...defineAction('getCustomerId'),\n        ...defineAction('getCustomerInfo'),\n        ...defineAction('showPaywallPopup'),\n        ...defineAction('isBalanceUsable')\n    };\n    return self;\n}\n(function() {\n    window.createEzrevenueService = $264b11b18bc87cf6$export$76c0134e616adfe;\n})();\n\n})();\n//# sourceMappingURL=ui.js.map\n","/* webextension-polyfill - v0.12.0 - Tue May 14 2024 18:01:29 */\n/* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n/* vim: set sts=2 sw=2 et tw=80: */\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\"use strict\";\n\nif (!(globalThis.chrome && globalThis.chrome.runtime && globalThis.chrome.runtime.id)) {\n  throw new Error(\"This script should only be loaded in a browser extension.\");\n}\n\nif (!(globalThis.browser && globalThis.browser.runtime && globalThis.browser.runtime.id)) {\n  const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\";\n\n  // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n  // optimization for Firefox. Since Spidermonkey does not fully parse the\n  // contents of a function until the first time it's called, and since it will\n  // never actually need to be called, this allows the polyfill to be included\n  // in Firefox nearly for free.\n  const wrapAPIs = extensionAPIs => {\n    // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n    // at build time by replacing the following \"include\" with the content of the\n    // JSON file.\n    const apiMetadata = {\n      \"alarms\": {\n        \"clear\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"clearAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"get\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"bookmarks\": {\n        \"create\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getChildren\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getRecent\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getSubTree\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getTree\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"move\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeTree\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"search\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      },\n      \"browserAction\": {\n        \"disable\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"enable\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"getBadgeBackgroundColor\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getBadgeText\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"openPopup\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"setBadgeBackgroundColor\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setBadgeText\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setIcon\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"setPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        }\n      },\n      \"browsingData\": {\n        \"remove\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"removeCache\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeCookies\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeDownloads\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeFormData\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeHistory\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeLocalStorage\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removePasswords\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removePluginData\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"settings\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"commands\": {\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"contextMenus\": {\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      },\n      \"cookies\": {\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAllCookieStores\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"set\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"devtools\": {\n        \"inspectedWindow\": {\n          \"eval\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2,\n            \"singleCallbackArg\": false\n          }\n        },\n        \"panels\": {\n          \"create\": {\n            \"minArgs\": 3,\n            \"maxArgs\": 3,\n            \"singleCallbackArg\": true\n          },\n          \"elements\": {\n            \"createSidebarPane\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        }\n      },\n      \"downloads\": {\n        \"cancel\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"download\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"erase\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getFileIcon\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"open\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"pause\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeFile\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"resume\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"search\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"show\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        }\n      },\n      \"extension\": {\n        \"isAllowedFileSchemeAccess\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"isAllowedIncognitoAccess\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"history\": {\n        \"addUrl\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"deleteAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"deleteRange\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"deleteUrl\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getVisits\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"search\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"i18n\": {\n        \"detectLanguage\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAcceptLanguages\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"identity\": {\n        \"launchWebAuthFlow\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"idle\": {\n        \"queryState\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"management\": {\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getSelf\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"setEnabled\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"uninstallSelf\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        }\n      },\n      \"notifications\": {\n        \"clear\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"create\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getPermissionLevel\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      },\n      \"pageAction\": {\n        \"getPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"hide\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setIcon\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"setPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"show\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        }\n      },\n      \"permissions\": {\n        \"contains\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"request\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"runtime\": {\n        \"getBackgroundPage\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getPlatformInfo\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"openOptionsPage\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"requestUpdateCheck\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"sendMessage\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 3\n        },\n        \"sendNativeMessage\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"setUninstallURL\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"sessions\": {\n        \"getDevices\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getRecentlyClosed\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"restore\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        }\n      },\n      \"storage\": {\n        \"local\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getBytesInUse\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"managed\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getBytesInUse\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"sync\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getBytesInUse\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        }\n      },\n      \"tabs\": {\n        \"captureVisibleTab\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 2\n        },\n        \"create\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"detectLanguage\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"discard\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"duplicate\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"executeScript\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getCurrent\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getZoom\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getZoomSettings\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"goBack\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"goForward\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"highlight\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"insertCSS\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"move\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"query\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"reload\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 2\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeCSS\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"sendMessage\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 3\n        },\n        \"setZoom\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"setZoomSettings\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"update\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        }\n      },\n      \"topSites\": {\n        \"get\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"webNavigation\": {\n        \"getAllFrames\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getFrame\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"webRequest\": {\n        \"handlerBehaviorChanged\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"windows\": {\n        \"create\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getCurrent\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getLastFocused\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      }\n    };\n\n    if (Object.keys(apiMetadata).length === 0) {\n      throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n    }\n\n    /**\n     * A WeakMap subclass which creates and stores a value for any key which does\n     * not exist when accessed, but behaves exactly as an ordinary WeakMap\n     * otherwise.\n     *\n     * @param {function} createItem\n     *        A function which will be called in order to create the value for any\n     *        key which does not exist, the first time it is accessed. The\n     *        function receives, as its only argument, the key being created.\n     */\n    class DefaultWeakMap extends WeakMap {\n      constructor(createItem, items = undefined) {\n        super(items);\n        this.createItem = createItem;\n      }\n\n      get(key) {\n        if (!this.has(key)) {\n          this.set(key, this.createItem(key));\n        }\n\n        return super.get(key);\n      }\n    }\n\n    /**\n     * Returns true if the given object is an object with a `then` method, and can\n     * therefore be assumed to behave as a Promise.\n     *\n     * @param {*} value The value to test.\n     * @returns {boolean} True if the value is thenable.\n     */\n    const isThenable = value => {\n      return value && typeof value === \"object\" && typeof value.then === \"function\";\n    };\n\n    /**\n     * Creates and returns a function which, when called, will resolve or reject\n     * the given promise based on how it is called:\n     *\n     * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n     *   the promise is rejected with that value.\n     * - If the function is called with exactly one argument, the promise is\n     *   resolved to that value.\n     * - Otherwise, the promise is resolved to an array containing all of the\n     *   function's arguments.\n     *\n     * @param {object} promise\n     *        An object containing the resolution and rejection functions of a\n     *        promise.\n     * @param {function} promise.resolve\n     *        The promise's resolution function.\n     * @param {function} promise.reject\n     *        The promise's rejection function.\n     * @param {object} metadata\n     *        Metadata about the wrapped method which has created the callback.\n     * @param {boolean} metadata.singleCallbackArg\n     *        Whether or not the promise is resolved with only the first\n     *        argument of the callback, alternatively an array of all the\n     *        callback arguments is resolved. By default, if the callback\n     *        function is invoked with only a single argument, that will be\n     *        resolved to the promise, while all arguments will be resolved as\n     *        an array if multiple are given.\n     *\n     * @returns {function}\n     *        The generated callback function.\n     */\n    const makeCallback = (promise, metadata) => {\n      return (...callbackArgs) => {\n        if (extensionAPIs.runtime.lastError) {\n          promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n        } else if (metadata.singleCallbackArg ||\n                   (callbackArgs.length <= 1 && metadata.singleCallbackArg !== false)) {\n          promise.resolve(callbackArgs[0]);\n        } else {\n          promise.resolve(callbackArgs);\n        }\n      };\n    };\n\n    const pluralizeArguments = (numArgs) => numArgs == 1 ? \"argument\" : \"arguments\";\n\n    /**\n     * Creates a wrapper function for a method with the given name and metadata.\n     *\n     * @param {string} name\n     *        The name of the method which is being wrapped.\n     * @param {object} metadata\n     *        Metadata about the method being wrapped.\n     * @param {integer} metadata.minArgs\n     *        The minimum number of arguments which must be passed to the\n     *        function. If called with fewer than this number of arguments, the\n     *        wrapper will raise an exception.\n     * @param {integer} metadata.maxArgs\n     *        The maximum number of arguments which may be passed to the\n     *        function. If called with more than this number of arguments, the\n     *        wrapper will raise an exception.\n     * @param {boolean} metadata.singleCallbackArg\n     *        Whether or not the promise is resolved with only the first\n     *        argument of the callback, alternatively an array of all the\n     *        callback arguments is resolved. By default, if the callback\n     *        function is invoked with only a single argument, that will be\n     *        resolved to the promise, while all arguments will be resolved as\n     *        an array if multiple are given.\n     *\n     * @returns {function(object, ...*)}\n     *       The generated wrapper function.\n     */\n    const wrapAsyncFunction = (name, metadata) => {\n      return function asyncFunctionWrapper(target, ...args) {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        return new Promise((resolve, reject) => {\n          if (metadata.fallbackToNoCallback) {\n            // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n            // and so the polyfill will try to call it with a callback first, and it will fallback\n            // to not passing the callback if the first call fails.\n            try {\n              target[name](...args, makeCallback({resolve, reject}, metadata));\n            } catch (cbError) {\n              console.warn(`${name} API method doesn't seem to support the callback parameter, ` +\n                           \"falling back to call it without a callback: \", cbError);\n\n              target[name](...args);\n\n              // Update the API method metadata, so that the next API calls will not try to\n              // use the unsupported callback anymore.\n              metadata.fallbackToNoCallback = false;\n              metadata.noCallback = true;\n\n              resolve();\n            }\n          } else if (metadata.noCallback) {\n            target[name](...args);\n            resolve();\n          } else {\n            target[name](...args, makeCallback({resolve, reject}, metadata));\n          }\n        });\n      };\n    };\n\n    /**\n     * Wraps an existing method of the target object, so that calls to it are\n     * intercepted by the given wrapper function. The wrapper function receives,\n     * as its first argument, the original `target` object, followed by each of\n     * the arguments passed to the original method.\n     *\n     * @param {object} target\n     *        The original target object that the wrapped method belongs to.\n     * @param {function} method\n     *        The method being wrapped. This is used as the target of the Proxy\n     *        object which is created to wrap the method.\n     * @param {function} wrapper\n     *        The wrapper function which is called in place of a direct invocation\n     *        of the wrapped method.\n     *\n     * @returns {Proxy<function>}\n     *        A Proxy object for the given method, which invokes the given wrapper\n     *        method in its place.\n     */\n    const wrapMethod = (target, method, wrapper) => {\n      return new Proxy(method, {\n        apply(targetMethod, thisObj, args) {\n          return wrapper.call(thisObj, target, ...args);\n        },\n      });\n    };\n\n    let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    /**\n     * Wraps an object in a Proxy which intercepts and wraps certain methods\n     * based on the given `wrappers` and `metadata` objects.\n     *\n     * @param {object} target\n     *        The target object to wrap.\n     *\n     * @param {object} [wrappers = {}]\n     *        An object tree containing wrapper functions for special cases. Any\n     *        function present in this object tree is called in place of the\n     *        method in the same location in the `target` object tree. These\n     *        wrapper methods are invoked as described in {@see wrapMethod}.\n     *\n     * @param {object} [metadata = {}]\n     *        An object tree containing metadata used to automatically generate\n     *        Promise-based wrapper functions for asynchronous. Any function in\n     *        the `target` object tree which has a corresponding metadata object\n     *        in the same location in the `metadata` tree is replaced with an\n     *        automatically-generated wrapper function, as described in\n     *        {@see wrapAsyncFunction}\n     *\n     * @returns {Proxy<object>}\n     */\n    const wrapObject = (target, wrappers = {}, metadata = {}) => {\n      let cache = Object.create(null);\n      let handlers = {\n        has(proxyTarget, prop) {\n          return prop in target || prop in cache;\n        },\n\n        get(proxyTarget, prop, receiver) {\n          if (prop in cache) {\n            return cache[prop];\n          }\n\n          if (!(prop in target)) {\n            return undefined;\n          }\n\n          let value = target[prop];\n\n          if (typeof value === \"function\") {\n            // This is a method on the underlying object. Check if we need to do\n            // any wrapping.\n\n            if (typeof wrappers[prop] === \"function\") {\n              // We have a special-case wrapper for this method.\n              value = wrapMethod(target, target[prop], wrappers[prop]);\n            } else if (hasOwnProperty(metadata, prop)) {\n              // This is an async method that we have metadata for. Create a\n              // Promise wrapper for it.\n              let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n              value = wrapMethod(target, target[prop], wrapper);\n            } else {\n              // This is a method that we don't know or care about. Return the\n              // original method, bound to the underlying object.\n              value = value.bind(target);\n            }\n          } else if (typeof value === \"object\" && value !== null &&\n                     (hasOwnProperty(wrappers, prop) ||\n                      hasOwnProperty(metadata, prop))) {\n            // This is an object that we need to do some wrapping for the children\n            // of. Create a sub-object wrapper for it with the appropriate child\n            // metadata.\n            value = wrapObject(value, wrappers[prop], metadata[prop]);\n          } else if (hasOwnProperty(metadata, \"*\")) {\n            // Wrap all properties in * namespace.\n            value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n          } else {\n            // We don't need to do any wrapping for this property,\n            // so just forward all access to the underlying object.\n            Object.defineProperty(cache, prop, {\n              configurable: true,\n              enumerable: true,\n              get() {\n                return target[prop];\n              },\n              set(value) {\n                target[prop] = value;\n              },\n            });\n\n            return value;\n          }\n\n          cache[prop] = value;\n          return value;\n        },\n\n        set(proxyTarget, prop, value, receiver) {\n          if (prop in cache) {\n            cache[prop] = value;\n          } else {\n            target[prop] = value;\n          }\n          return true;\n        },\n\n        defineProperty(proxyTarget, prop, desc) {\n          return Reflect.defineProperty(cache, prop, desc);\n        },\n\n        deleteProperty(proxyTarget, prop) {\n          return Reflect.deleteProperty(cache, prop);\n        },\n      };\n\n      // Per contract of the Proxy API, the \"get\" proxy handler must return the\n      // original value of the target if that value is declared read-only and\n      // non-configurable. For this reason, we create an object with the\n      // prototype set to `target` instead of using `target` directly.\n      // Otherwise we cannot return a custom object for APIs that\n      // are declared read-only and non-configurable, such as `chrome.devtools`.\n      //\n      // The proxy handlers themselves will still use the original `target`\n      // instead of the `proxyTarget`, so that the methods and properties are\n      // dereferenced via the original targets.\n      let proxyTarget = Object.create(target);\n      return new Proxy(proxyTarget, handlers);\n    };\n\n    /**\n     * Creates a set of wrapper functions for an event object, which handles\n     * wrapping of listener functions that those messages are passed.\n     *\n     * A single wrapper is created for each listener function, and stored in a\n     * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n     * retrieve the original wrapper, so that  attempts to remove a\n     * previously-added listener work as expected.\n     *\n     * @param {DefaultWeakMap<function, function>} wrapperMap\n     *        A DefaultWeakMap object which will create the appropriate wrapper\n     *        for a given listener function when one does not exist, and retrieve\n     *        an existing one when it does.\n     *\n     * @returns {object}\n     */\n    const wrapEvent = wrapperMap => ({\n      addListener(target, listener, ...args) {\n        target.addListener(wrapperMap.get(listener), ...args);\n      },\n\n      hasListener(target, listener) {\n        return target.hasListener(wrapperMap.get(listener));\n      },\n\n      removeListener(target, listener) {\n        target.removeListener(wrapperMap.get(listener));\n      },\n    });\n\n    const onRequestFinishedWrappers = new DefaultWeakMap(listener => {\n      if (typeof listener !== \"function\") {\n        return listener;\n      }\n\n      /**\n       * Wraps an onRequestFinished listener function so that it will return a\n       * `getContent()` property which returns a `Promise` rather than using a\n       * callback API.\n       *\n       * @param {object} req\n       *        The HAR entry object representing the network request.\n       */\n      return function onRequestFinished(req) {\n        const wrappedReq = wrapObject(req, {} /* wrappers */, {\n          getContent: {\n            minArgs: 0,\n            maxArgs: 0,\n          },\n        });\n        listener(wrappedReq);\n      };\n    });\n\n    const onMessageWrappers = new DefaultWeakMap(listener => {\n      if (typeof listener !== \"function\") {\n        return listener;\n      }\n\n      /**\n       * Wraps a message listener function so that it may send responses based on\n       * its return value, rather than by returning a sentinel value and calling a\n       * callback. If the listener function returns a Promise, the response is\n       * sent when the promise either resolves or rejects.\n       *\n       * @param {*} message\n       *        The message sent by the other end of the channel.\n       * @param {object} sender\n       *        Details about the sender of the message.\n       * @param {function(*)} sendResponse\n       *        A callback which, when called with an arbitrary argument, sends\n       *        that value as a response.\n       * @returns {boolean}\n       *        True if the wrapped listener returned a Promise, which will later\n       *        yield a response. False otherwise.\n       */\n      return function onMessage(message, sender, sendResponse) {\n        let didCallSendResponse = false;\n\n        let wrappedSendResponse;\n        let sendResponsePromise = new Promise(resolve => {\n          wrappedSendResponse = function(response) {\n            didCallSendResponse = true;\n            resolve(response);\n          };\n        });\n\n        let result;\n        try {\n          result = listener(message, sender, wrappedSendResponse);\n        } catch (err) {\n          result = Promise.reject(err);\n        }\n\n        const isResultThenable = result !== true && isThenable(result);\n\n        // If the listener didn't returned true or a Promise, or called\n        // wrappedSendResponse synchronously, we can exit earlier\n        // because there will be no response sent from this listener.\n        if (result !== true && !isResultThenable && !didCallSendResponse) {\n          return false;\n        }\n\n        // A small helper to send the message if the promise resolves\n        // and an error if the promise rejects (a wrapped sendMessage has\n        // to translate the message into a resolved promise or a rejected\n        // promise).\n        const sendPromisedResult = (promise) => {\n          promise.then(msg => {\n            // send the message value.\n            sendResponse(msg);\n          }, error => {\n            // Send a JSON representation of the error if the rejected value\n            // is an instance of error, or the object itself otherwise.\n            let message;\n            if (error && (error instanceof Error ||\n                typeof error.message === \"string\")) {\n              message = error.message;\n            } else {\n              message = \"An unexpected error occurred\";\n            }\n\n            sendResponse({\n              __mozWebExtensionPolyfillReject__: true,\n              message,\n            });\n          }).catch(err => {\n            // Print an error on the console if unable to send the response.\n            console.error(\"Failed to send onMessage rejected reply\", err);\n          });\n        };\n\n        // If the listener returned a Promise, send the resolved value as a\n        // result, otherwise wait the promise related to the wrappedSendResponse\n        // callback to resolve and send it as a response.\n        if (isResultThenable) {\n          sendPromisedResult(result);\n        } else {\n          sendPromisedResult(sendResponsePromise);\n        }\n\n        // Let Chrome know that the listener is replying.\n        return true;\n      };\n    });\n\n    const wrappedSendMessageCallback = ({reject, resolve}, reply) => {\n      if (extensionAPIs.runtime.lastError) {\n        // Detect when none of the listeners replied to the sendMessage call and resolve\n        // the promise to undefined as in Firefox.\n        // See https://github.com/mozilla/webextension-polyfill/issues/130\n        if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n          resolve();\n        } else {\n          reject(new Error(extensionAPIs.runtime.lastError.message));\n        }\n      } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n        // Convert back the JSON representation of the error into\n        // an Error instance.\n        reject(new Error(reply.message));\n      } else {\n        resolve(reply);\n      }\n    };\n\n    const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n      if (args.length < metadata.minArgs) {\n        throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n      }\n\n      if (args.length > metadata.maxArgs) {\n        throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n      }\n\n      return new Promise((resolve, reject) => {\n        const wrappedCb = wrappedSendMessageCallback.bind(null, {resolve, reject});\n        args.push(wrappedCb);\n        apiNamespaceObj.sendMessage(...args);\n      });\n    };\n\n    const staticWrappers = {\n      devtools: {\n        network: {\n          onRequestFinished: wrapEvent(onRequestFinishedWrappers),\n        },\n      },\n      runtime: {\n        onMessage: wrapEvent(onMessageWrappers),\n        onMessageExternal: wrapEvent(onMessageWrappers),\n        sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {minArgs: 1, maxArgs: 3}),\n      },\n      tabs: {\n        sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {minArgs: 2, maxArgs: 3}),\n      },\n    };\n    const settingMetadata = {\n      clear: {minArgs: 1, maxArgs: 1},\n      get: {minArgs: 1, maxArgs: 1},\n      set: {minArgs: 1, maxArgs: 1},\n    };\n    apiMetadata.privacy = {\n      network: {\"*\": settingMetadata},\n      services: {\"*\": settingMetadata},\n      websites: {\"*\": settingMetadata},\n    };\n\n    return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n  };\n\n  // The build process adds a UMD wrapper around this file, which makes the\n  // `module` variable available.\n  module.exports = wrapAPIs(chrome);\n} else {\n  module.exports = globalThis.browser;\n}\n","import browser from 'webextension-polyfill'\n\nexport function createEzrevenueService() {\n  function defineAction(action) {\n    async function actionHandler(params) {\n      const response = await browser.runtime.sendMessage({\n        action: `ezrevenue_${action}`,\n        data: params || {},\n      })\n      console.log('ezrevenue response:', response)\n      return response\n      // if (response && response.success) {\n      //   return response.data\n      // } else {\n      //   throw new Error(response?.error || 'unexpected error response')\n      // }\n    }\n    return { [action]: actionHandler }\n  }\n  const self = {\n    ...defineAction('getCustomerId'),\n    ...defineAction('getCustomerInfo'),\n    ...defineAction('showPaywallPopup'),\n    ...defineAction('isBalanceUsable'),\n  }\n  return self\n}\n\n;(function () {\n  if (typeof window !== undefined) {\n    window.createEzrevenueService = createEzrevenueService\n  }\n})()\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","factory","module1","chrome","runtime","browser","wrapAPIs","extensionAPIs","apiMetadata","Object","keys","length","DefaultWeakMap","WeakMap","constructor","createItem","items","get","key","has","set","isThenable","value","then","makeCallback","promise","metadata","callbackArgs","lastError","reject","message","singleCallbackArg","resolve","pluralizeArguments","numArgs","wrapAsyncFunction","name","target","args","minArgs","maxArgs","Promise","fallbackToNoCallback","cbError","console","warn","noCallback","wrapMethod","method","wrapper","Proxy","apply","targetMethod","thisObj","hasOwnProperty","Function","bind","prototype","wrapObject","wrappers","cache","create","proxyTarget","prop","receiver","defineProperty","configurable","enumerable","desc","Reflect","deleteProperty","wrapEvent","wrapperMap","addListener","listener","hasListener","removeListener","onRequestFinishedWrappers","req","getContent","onMessageWrappers","sender","sendResponse","wrappedSendResponse","result","didCallSendResponse","sendResponsePromise","response","isResultThenable","msg","error","__mozWebExtensionPolyfillReject__","catch","wrappedSendMessageCallback","reply","wrappedSendMessage","apiNamespaceObj","wrappedCb","push","sendMessage","staticWrappers","devtools","network","onRequestFinished","onMessage","onMessageExternal","tabs","settingMetadata","clear","privacy","services","websites","define","amd","$hnTw7","createEzrevenueService","defineAction","action","actionHandler","params","a","__esModule","default","data","log","CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE","undefined","asyncFunctionWrapper","handlers","wrappedReq","sendPromisedResult"],"version":3,"file":"ui.js.map"}